name: Tests
on:
  workflow_dispatch:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  tests_vim:
    name: Vim (unix)
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-20.04, macos-latest]
        # vim-version: [v7.4.2119, v8.2.5172, head]
        os: [ubuntu-20.04]
        vim-version: [v7.4.2119]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout kkoomen/vim-doge
        uses: actions/checkout@v2

      - name: Checkout junegunn/vader.vim
        uses: actions/checkout@v2
        with:
          repository: junegunn/vader.vim
          path: vader.vim

      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: ./scripts/build.sh
        shell: bash

      - name: Setup vim
        uses: thinca/action-setup-vim@v1
        id: vim
        with:
          vim_version: ${{ matrix.vim-version }}
          vim_type: Vim

      - name: Run tests
        run: ./scripts/run-vader-tests.sh "${{ steps.vim.outputs.executable }}"
        shell: bash

  # tests_vim_windows:
  #   name: Vim (windows)
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [windows-latest]
  #       vim-version: [v8.2.5172, head]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout kkoomen/vim-doge
  #       uses: actions/checkout@v2
  #
  #     - name: Checkout junegunn/vader.vim
  #       uses: actions/checkout@v2
  #       with:
  #         repository: junegunn/vader.vim
  #         path: vader.vim
  #
  #     - name: Cache Cargo dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cargo
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #
  #     - name: Build
  #       run: ./scripts/build.ps1
  #
  #     - name: Setup vim
  #       uses: thinca/action-setup-vim@v1
  #       id: vim
  #       with:
  #         vim_version: ${{ matrix.vim-version }}
  #         vim_type: Vim
  #
  #     - name: Run tests
  #       run: ./scripts/run-vader-tests.sh "${{ steps.vim.outputs.executable }}"
  #       shell: bash
  #
  #
  # tests_neovim:
  #   name: Neovim (unix)
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-20.04, macos-latest]
  #       vim-version: [v0.3.2, head]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout kkoomen/vim-doge
  #       uses: actions/checkout@v2
  #
  #     - name: Checkout junegunn/vader.vim
  #       uses: actions/checkout@v2
  #       with:
  #         repository: junegunn/vader.vim
  #         path: vader.vim
  #
  #     - name: Cache Cargo dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cargo
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #
  #     - run: ./scripts/build.sh
  #       shell: bash
  #
  #     - name: Setup vim
  #       uses: thinca/action-setup-vim@v1
  #       id: vim
  #       with:
  #         vim_version: ${{ matrix.vim-version }}
  #         vim_type: Neovim
  #
  #     - name: Run tests
  #       run: ./scripts/run-vader-tests.sh "${{ steps.vim.outputs.executable }}"
  #       shell: bash
  #
  # vint:
  #   name: Linter
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v1
  #     - run: pip install vim-vint
  #     - run: vint -s ./autoload ./plugin
