name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - 'release/v*.*.*'

jobs:
  build_and_upload_release_assets:
    name: Build and upload binary assets
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-20.04, windows-latest]
        os: [macos-latest, ubuntu-20.04]
        include:

          # Intel-based
          - platform: macos-latest
            target: x86_64-apple-darwin
            asset_path: vim-doge-helper-macos-x86_64.tar.gz

          # Apple Silicon
          - platform: macos-latest
            target: aarch64-apple-darwin
            asset_path: vim-doge-helper-macos-aarch64.tar.gz

          # Linux
          - platform: ubuntu-20.04
            asset_path: vim-doge-helper-linux.tar.gz

          # 64-bit
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            asset_path: vim-doge-helper-windows-x86_64.tar.gz

          # 32-bit
          - platform: windows-latest
            target: i686-pc-windows-msvc
            asset_path: vim-doge-helper-windows-i686.tar.gz

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - name: Checkout kkoomen/vim-doge
        uses: actions/checkout@v3

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Build
        run: ./scripts/build.sh "${{ matrix.settings.target }}" "${{ matrix.settings.asset_path }}"
        shell: bash

      - name: Get version
        run: echo "PROJECT_VERSION=$(cat helper/Cargo.toml | grep version | head -n 1 | sed -E 's/version = \"([0-9]+.[0-9]+.[0-9]+)\"/\1/')" > $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ env.PROJECT_VERSION }}
          files: ${{ matrix.settings.asset_path }}
          draft: false
          prerelease: false
